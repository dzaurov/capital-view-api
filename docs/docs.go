// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/balance-sheets": {
            "get": {
                "description": "Retrieve a list of all balance sheet records",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance-sheets"
                ],
                "summary": "Get all balance sheet entries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BalanceSheet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new balance sheet record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance-sheets"
                ],
                "summary": "Create a new balance sheet entry",
                "parameters": [
                    {
                        "description": "Balance Sheet data to create",
                        "name": "balanceSheet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BalanceSheet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BalanceSheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/balance-sheets/{id}": {
            "get": {
                "description": "Retrieve details of a specific balance sheet record using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance-sheets"
                ],
                "summary": "Get a single balance sheet entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Balance Sheet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BalanceSheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Balance Sheet not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify the details of an existing balance sheet record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance-sheets"
                ],
                "summary": "Update an existing balance sheet entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Balance Sheet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Balance Sheet data to update",
                        "name": "balanceSheet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BalanceSheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BalanceSheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format or input data",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Balance Sheet not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a balance sheet record from the database using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance-sheets"
                ],
                "summary": "Delete a balance sheet entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Balance Sheet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Balance Sheet not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/beneficial-owners/by-regcode/{regcode}": {
            "get": {
                "description": "Возвращает пагинированный список бенефициаров (beneficial owners) для указанной компании.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beneficial_owner"
                ],
                "summary": "Получить бенефициаров компании по Regcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regcode компании",
                        "name": "regcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пагинированный список бенефициаров",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.BeneficialOwner"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неверный Regcode",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/cash-flow-statements": {
            "get": {
                "description": "Retrieve a list of all cash flow statement records",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "summary": "Get all cash flow statement entries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CashFlowStatement"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new cash flow statement record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "summary": "Create a new cash flow statement entry",
                "parameters": [
                    {
                        "description": "Cash Flow Statement data to create",
                        "name": "cashFlowStatement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CashFlowStatement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CashFlowStatement"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/cash-flow-statements/{id}": {
            "get": {
                "description": "Retrieve details of a specific cash flow statement record using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "summary": "Get a single cash flow statement entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cash Flow Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CashFlowStatement"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Cash Flow Statement not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify the details of an existing cash flow statement record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "summary": "Update an existing cash flow statement entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cash Flow Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cash Flow Statement data to update",
                        "name": "cashFlowStatement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CashFlowStatement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CashFlowStatement"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format or input data",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Cash Flow Statement not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a cash flow statement record from the database using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "summary": "Delete a cash flow statement entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cash Flow Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Cash Flow Statement not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/financial-statements/by-regcode/{regcode}": {
            "get": {
                "description": "Возвращает пагинированный список фин. отчетов (financial statements) для указанной компании.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "financial_statement"
                ],
                "summary": "Получить фин. отчеты компании по Regcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regcode компании",
                        "name": "regcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пагинированный список фин. отчетов",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.FinancialStatement"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неверный Regcode",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/income-statements": {
            "get": {
                "description": "Retrieve a list of all income statement records",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "income-statements"
                ],
                "summary": "Get all income statement entries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IncomeStatement"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new income statement record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "income-statements"
                ],
                "summary": "Create a new income statement entry",
                "parameters": [
                    {
                        "description": "Income Statement data to create",
                        "name": "incomeStatement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IncomeStatement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.IncomeStatement"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/income-statements/{id}": {
            "get": {
                "description": "Retrieve details of a specific income statement record using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "income-statements"
                ],
                "summary": "Get a single income statement entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Income Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IncomeStatement"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Income Statement not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify the details of an existing income statement record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "income-statements"
                ],
                "summary": "Update an existing income statement entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Income Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Income Statement data to update",
                        "name": "incomeStatement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IncomeStatement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IncomeStatement"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format or input data",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Income Statement not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an income statement record from the database using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "income-statements"
                ],
                "summary": "Delete an income statement entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Income Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found - Income Statement not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/by-regcode/{regcode}": {
            "get": {
                "description": "Возвращает пагинированный список участников (members) для указанной компании.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "Получить участников компании по Regcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regcode компании",
                        "name": "regcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пагинированный список участников",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Member"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неверный Regcode",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/register/{regcode}": {
            "get": {
                "description": "Получает детальную информацию о компании по её Regcode.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "register"
                ],
                "summary": "Получить информацию о компании по Regcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regcode компании",
                        "name": "regcode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о компании",
                        "schema": {
                            "$ref": "#/definitions/models.Registers"
                        }
                    },
                    "400": {
                        "description": "Неверный Regcode",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Компания не найдена",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/registers": {
            "get": {
                "description": "Возвращает пагинированный список записей из таблицы registers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "register"
                ],
                "summary": "Получить список всех записей регистра",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пагинированный список записей",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Registers"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/search/detailed": {
            "get": {
                "description": "Ищет компании по части названия, Regcode, SEPA, имени бенефициара или участника. Возвращает пагинированный список companies (registers) с вложенными связанными данными.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Расширенный поиск компаний (Оптимизированный + Пагинация + Вложенный ответ)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пагинированный список компаний (с вложенными Members, BeneficialOwners, FinancialStatements)\" // \u003c-- ИЗМЕНЕНО data type на models.Registers",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Registers"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неверный запрос (отсутствует 'q')",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.BalanceSheet": {
            "type": "object",
            "properties": {
                "accounts_receivable": {
                    "type": "string"
                },
                "cash": {
                    "type": "string"
                },
                "current_liabilities": {
                    "type": "string"
                },
                "equity": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "fixed_assets": {
                    "type": "string"
                },
                "future_housing_repairs_payments": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "intangible_assets": {
                    "type": "string"
                },
                "inventories": {
                    "type": "string"
                },
                "investments": {
                    "type": "string"
                },
                "marketable_securities": {
                    "type": "string"
                },
                "non_current_liabilities": {
                    "type": "string"
                },
                "provisions": {
                    "type": "string"
                },
                "statementID": {
                    "description": "\u003c--- Добавить/обновить тег",
                    "type": "string"
                },
                "total_assets": {
                    "type": "string"
                },
                "total_current_assets": {
                    "type": "string"
                },
                "total_equities": {
                    "type": "string"
                },
                "total_non_current_assets": {
                    "type": "string"
                }
            }
        },
        "models.BeneficialOwner": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "forename": {
                    "description": "\u003c-- Индекс для поиска",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_modified_at": {
                    "type": "string"
                },
                "latvian_identity_number_masked": {
                    "description": "... остальные поля ...",
                    "type": "string"
                },
                "legal_entity_registration_number": {
                    "description": "Индекс нужен для поиска по компании и для связи в Registers",
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "registered_on": {
                    "type": "string"
                },
                "residence": {
                    "type": "string"
                },
                "surname": {
                    "description": "\u003c-- Индекс для поиска",
                    "type": "string"
                }
            }
        },
        "models.CashFlowStatement": {
            "type": "object",
            "properties": {
                "at_beginning_of_year": {
                    "type": "string"
                },
                "at_end_of_year": {
                    "type": "string"
                },
                "cff_dividends_paid": {
                    "type": "string"
                },
                "cff_loans_received": {
                    "type": "string"
                },
                "cff_net_financing_cash_flow": {
                    "type": "string"
                },
                "cff_proceeds_from_stocks_bonds_issuance_or_contributed_capital": {
                    "type": "string"
                },
                "cff_repayments_of_lease_obligations": {
                    "type": "string"
                },
                "cff_repayments_of_loans_made": {
                    "type": "string"
                },
                "cff_subsidies_grants_donations_received": {
                    "type": "string"
                },
                "cfi_acquisition_of_fixed_assets_intangible_assets": {
                    "type": "string"
                },
                "cfi_acquisition_of_stocks_shares": {
                    "type": "string"
                },
                "cfi_dividends_received": {
                    "type": "string"
                },
                "cfi_interest_received": {
                    "type": "string"
                },
                "cfi_loans_made": {
                    "type": "string"
                },
                "cfi_net_investing_cash_flow": {
                    "type": "string"
                },
                "cfi_repayments_of_loans_received": {
                    "type": "string"
                },
                "cfi_sale_proceeds_from_fixed_assets_intangible_assets": {
                    "type": "string"
                },
                "cfi_sale_proceeds_from_stocks_shares": {
                    "type": "string"
                },
                "cfo_dm_cash_paid_to_suppliers_employees": {
                    "type": "string"
                },
                "cfo_dm_cash_received_from_customers": {
                    "type": "string"
                },
                "cfo_dm_extra_items_cash_flow": {
                    "type": "string"
                },
                "cfo_dm_income_taxes_paid": {
                    "type": "string"
                },
                "cfo_dm_interest_paid": {
                    "type": "string"
                },
                "cfo_dm_net_operating_cash_flow": {
                    "type": "string"
                },
                "cfo_dm_operating_cash_flow": {
                    "type": "string"
                },
                "cfo_dm_other_cash_received_paid": {
                    "type": "string"
                },
                "cfo_im_extra_items_cash_flow": {
                    "type": "string"
                },
                "cfo_im_income_before_changes_in_working_capital": {
                    "type": "string"
                },
                "cfo_im_income_before_income_taxes": {
                    "type": "string"
                },
                "cfo_im_income_taxes_paid": {
                    "type": "string"
                },
                "cfo_im_interest_paid": {
                    "type": "string"
                },
                "cfo_im_net_operating_cash_flow": {
                    "type": "string"
                },
                "cfo_im_operating_cash_flow": {
                    "type": "string"
                },
                "effect_of_exchange_rate_change": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "net_increase": {
                    "type": "string"
                },
                "statementID": {
                    "description": "\u003c--- Добавить/обновить тег",
                    "type": "string"
                }
            }
        },
        "models.FinancialStatement": {
            "type": "object",
            "properties": {
                "balanceSheet": {
                    "$ref": "#/definitions/models.BalanceSheet"
                },
                "cashFlowStatement": {
                    "$ref": "#/definitions/models.CashFlowStatement"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "employees": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "incomeStatement": {
                    "description": "--- Связи (Один к одному/нулю с деталями) ---\nУказываем, что у Statement есть детали, связанные по ID этого Statement\nи колонке 'statement_id' в таблицах деталей.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.IncomeStatement"
                        }
                    ]
                },
                "legalEntityRegistrationNumber": {
                    "description": "Индекс нужен для поиска по компании и для связи в Registers",
                    "type": "string"
                },
                "rounded_to_nearest": {
                    "type": "string"
                },
                "source_schema": {
                    "description": "... остальные поля ...",
                    "type": "string"
                },
                "source_type": {
                    "type": "string"
                },
                "year": {
                    "description": "\u003c-- Составной уникальный индекс",
                    "type": "string"
                },
                "year_ended_on": {
                    "type": "string"
                },
                "year_started_on": {
                    "type": "string"
                }
            }
        },
        "models.IncomeStatement": {
            "type": "object",
            "properties": {
                "by_function_administrative_expenses": {
                    "type": "string"
                },
                "by_function_cost_of_goods_sold": {
                    "type": "string"
                },
                "by_function_gross_profit": {
                    "type": "string"
                },
                "by_function_other_operating_revenues": {
                    "type": "string"
                },
                "by_function_selling_expenses": {
                    "type": "string"
                },
                "by_nature_depreciation_expenses": {
                    "type": "string"
                },
                "by_nature_inventory_change": {
                    "type": "string"
                },
                "by_nature_labour_expenses": {
                    "type": "string"
                },
                "by_nature_long_term_investment_expenses": {
                    "type": "string"
                },
                "by_nature_material_expenses": {
                    "type": "string"
                },
                "by_nature_other_operating_revenues": {
                    "type": "string"
                },
                "equity_investment_earnings": {
                    "type": "string"
                },
                "extra_dividends": {
                    "type": "string"
                },
                "extra_expenses": {
                    "type": "string"
                },
                "extra_revenues": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_after_income_taxes": {
                    "type": "string"
                },
                "income_before_income_taxes": {
                    "type": "string"
                },
                "interest_expenses": {
                    "type": "string"
                },
                "investment_fair_value_adjustments": {
                    "type": "string"
                },
                "net_income": {
                    "type": "string"
                },
                "net_turnover": {
                    "type": "string"
                },
                "other_interest_revenues": {
                    "type": "string"
                },
                "other_long_term_investment_earnings": {
                    "type": "string"
                },
                "other_operating_expenses": {
                    "type": "string"
                },
                "other_taxes": {
                    "type": "string"
                },
                "provision_for_income_taxes": {
                    "type": "string"
                },
                "statementID": {
                    "description": "\u003c--- Добавить/обновить тег",
                    "type": "string"
                }
            }
        },
        "models.Member": {
            "type": "object",
            "properties": {
                "at_legal_entity_registration_number": {
                    "description": "Индекс нужен для поиска по компании и для связи в Registers",
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "date_from": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_modified_at": {
                    "type": "string"
                },
                "latvian_identity_number_masked": {
                    "description": "... остальные поля ...",
                    "type": "string"
                },
                "legal_entity_registration_number": {
                    "description": "Если это поле = regcode компании, где лицо является участником, то нужен индекс",
                    "type": "string"
                },
                "name": {
                    "description": "\u003c-- Индекс для поиска по имени",
                    "type": "string"
                },
                "number_of_shares": {
                    "type": "string"
                },
                "registered_on": {
                    "type": "string"
                },
                "share_currency": {
                    "type": "string"
                },
                "share_nominal_value": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "models.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Срез данных для текущей страницы"
                },
                "limit": {
                    "description": "Лимит записей на странице",
                    "type": "integer"
                },
                "page": {
                    "description": "Текущий номер страницы",
                    "type": "integer"
                },
                "total_records": {
                    "description": "Общее количество записей (не только на странице)",
                    "type": "integer"
                }
            }
        },
        "models.Registers": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "addressid": {
                    "type": "string"
                },
                "atvk": {
                    "type": "string"
                },
                "beneficialOwners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BeneficialOwner"
                    }
                },
                "city": {
                    "type": "string"
                },
                "closed": {
                    "type": "string"
                },
                "financialStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FinancialStatement"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "indexCompany": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "members": {
                    "description": "--- Связи ---\nУказываем, что у одной записи Registers может быть много записей Member,\nсвязанных по колонке 'legal_entity_registration_number' в таблице members,\nкоторая соответствует колонке 'regcode' в таблице registers.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Member"
                    }
                },
                "name": {
                    "description": "\u003c-- Добавим индекс для поиска по имени",
                    "type": "string"
                },
                "nameAfterQuotes": {
                    "type": "string"
                },
                "nameBeforeQuotes": {
                    "type": "string"
                },
                "nameInQuotes": {
                    "description": "\u003c-- Добавим индекс",
                    "type": "string"
                },
                "regcode": {
                    "description": "Уникальный индекс уже есть",
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "registered": {
                    "type": "string"
                },
                "regtype": {
                    "type": "string"
                },
                "regtypeText": {
                    "type": "string"
                },
                "reregistrationTerm": {
                    "type": "string"
                },
                "sepa": {
                    "type": "string"
                },
                "terminated": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "typeText": {
                    "type": "string"
                },
                "withoutQuotes": {
                    "description": "\u003c-- Добавим индекс",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Your API Title",
	Description:      "This is a sample server for managing data based on the provided schema.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
